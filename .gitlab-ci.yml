# .gitlab-ci.yml
variables:
  PROJECT_DIR: "/www/go/src/maongTV"
  BUILD_OUTPUT: "${PROJECT_DIR}/build/mangoTV-linux"
  CONFIG_PATH: "${PROJECT_DIR}/etc/config.yml"

stages:
  - build
  - deploy

# 构建阶段（Go 1.23环境）
compile-linux:
  stage: build
  image: golang:1.23-bullseye
  tags:
    - golang
  script:
    - cd ${PROJECT_DIR}
    - make build-linux
    - chmod +x ${BUILD_OUTPUT}
  artifacts:
    paths:
      - ${BUILD_OUTPUT}
      - ${CONFIG_PATH}
    expire_in: 2 weeks

# 智能部署阶段
auto-deploy:
  stage: deploy
  image: alpine:2025
  tags:
    - production
  script:
    - apk add --no-cache bash
    - |
      cat <<DEPLOY_SCRIPT > deploy.sh
      #!/bin/bash
      # 服务控制函数
      stop_service() {
        if pgrep -x "mangoTV-linux" >/dev/null; then
          pkill -15 mangoTV-linux
          sleep 3
          if pgrep -x "mangoTV-linux" >/dev/null; then
            pkill -9 mangoTV-linux
          fi
        fi
      }
      
      # 部署准备
      DEPLOY_DIR="/opt/maongTV"
      mkdir -p \${DEPLOY_DIR}/{bin,etc,logs}
      
      # 文件原子替换
      cp ${BUILD_OUTPUT} \${DEPLOY_DIR}/bin/
      cp ${CONFIG_PATH} \${DEPLOY_DIR}/etc/config.yml
      
      # 启动服务（带监控）
      nohup \${DEPLOY_DIR}/bin/mangoTV-linux \
        --config=\${DEPLOY_DIR}/etc/config.yml \
        >> \${DEPLOY_DIR}/logs/runtime-$(date +%Y%m%d).log 2>&1 &
      
      # 健康检查
      sleep 5
      curl --retry 3 --max-time 5 http://localhost:8089/health || exit 1
      DEPLOY_SCRIPT

    - bash deploy.sh
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  environment:
    name: production
    url: http://api.mango-tv.test
